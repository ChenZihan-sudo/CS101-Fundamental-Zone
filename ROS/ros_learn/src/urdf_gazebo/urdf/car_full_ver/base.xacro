<robot name="base" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- * Macro for inertia matrix -->
    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0"
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
                iyy="${m*(3*r*r+h*h)/12}" iyz="0"
                izz="${m*r*r/2}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="Box_inertial_matrix" params="m l w h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(h*h + l*l)/12}" ixy="0" ixz="0"
                iyy="${m*(w*w + l*l)/12}" iyz="0"
                izz="${m*(w*w + h*h)/12}" />
        </inertial>
    </xacro:macro>

    <!-- * Parameters -->
    <xacro:property name="PI" value="3.14159265358979" />
    <xacro:property name="base_footprint_radius" value="0.0000001" />
    <xacro:property name="base_link_radius" value="0.1" />
    <xacro:property name="base_link_length" value="0.08" />
    <xacro:property name="base_link_mass" value="0.5" />
    <xacro:property name="ground_space" value="0.015" />

    <!-- * base_footprint -->
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="${base_footprint_radius}" />
            </geometry>
        </visual>
    </link>

    <!-- * base_link -->
    <link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="base_color">
                <color rgba="0.5 0 0.5 0.8" />
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}" />
            </geometry>
        </collision>
        <xacro:cylinder_inertial_matrix m="${base_link_mass}" r="${base_link_radius}"
            h="${base_link_length}" />
    </link>

    <joint name="base_link2base_footprint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 ${ground_space + base_link_length / 2}" />
    </joint>

    <gazebo reference="base_link">
        <material>Gazebo/Yellow</material>
    </gazebo>

    <!-- * Template: driver wheel -->
    <xacro:property name="wheel_radius" value="0.0325" />
    <xacro:property name="wheel_length" value="0.015" />
    <xacro:property name="wheel_mass" value="0.05" />

    <xacro:macro name="add_wheel" params="name LorR_flag">
        <link name="wheel_${name}">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz="0 0 0" rpy="${PI / 2} 0 0" />
                <material name="wheel_${name}_color">
                    <color rgba="1 1 1 0.95" />
                </material>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz="0 0 0" rpy="${PI / 2} 0 0" />
            </collision>
            <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}"
                h="${wheel_length}"></xacro:cylinder_inertial_matrix>
        </link>


        <joint name="wheel_${name}_2base" type="continuous">
            <parent link="base_link"></parent>
            <child link="wheel_${name}"></child>
            <origin
                xyz="0 ${LorR_flag * base_link_radius} ${-(ground_space + base_link_length / 2 - wheel_radius)}"
                rpy="0 0 0" />
            <axis xyz="0 1 0" />
        </joint>

        <gazebo reference="wheel_${name}">
            <material>Gazebo/Red</material>
        </gazebo>
    </xacro:macro>

    <!-- * Template: universal wheel -->
    <xacro:property name="uni_wheel_radius" value="0.0075" />
    <xacro:property name="uni_wheel_mass" value="0.03" />
    <xacro:macro name="add_uni_wheel" params="name ForB_flag">
        <link name="uni_wheel_${name}">
            <visual>
                <geometry>
                    <sphere radius="${uni_wheel_radius}" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <material name="uni_wheel_${name}_color">
                    <color rgba="1 1 1 0.95" />
                </material>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${uni_wheel_radius}" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0" />
            </collision>
            <xacro:sphere_inertial_matrix m="${uni_wheel_mass}" r="${uni_wheel_radius}" />
        </link>

        <joint name="uniWheel_${name}_2base" type="continuous">
            <parent link="base_link"></parent>
            <child link="uni_wheel_${name}"></child>
            <origin
                xyz="${ForB_flag * (base_link_radius - uni_wheel_radius)} 0 ${-(base_link_length / 2 + ground_space / 2)}"
                rpy="0 0 0" />
            <axis xyz="1 1 1" />
        </joint>

        <gazebo reference="uni_wheel_${name}">
            <material>Gazebo/Red</material>
        </gazebo>
    </xacro:macro>

    <xacro:add_wheel name="Left" LorR_flag="1" />
    <xacro:add_wheel name="Right" LorR_flag="-1" />

    <xacro:add_uni_wheel name="Forward" ForB_flag="1" />
    <xacro:add_uni_wheel name="Back" ForB_flag="-1" />
</robot>